LittleEndian();

FSeek(8);
uint shaderdb_offset;
uint shaderdb_size;

FSeek(32);
uint64 unknown_size;
uint64 shaderdb_size;


FSeek(52);
uint unknown_count;

/*
FSeek(6951018);
//67137 - wrong
struct {
    local int string_count = 0;
    while (FTell() < 9822690 - 1) {
        struct {
            if (ReadUByte() % 2 == 1) { // Odd
                ushort string_size;
                char s[(string_size-1)/4];
            } else {    // Even
                ubyte string_size;
                char s[string_size/4];
            }
            string_count++;
            if (string_count == 62999) {    //after zpass.mat
                FSkip(3);
            }
            if (string_count == 68904) {    // after zpass;
                FSkip(3);
            }
            if (string_count == 41467) {    // after zombie_neck_s1_spc.dds
                FSkip(5);
            }
        } string_obj <optimize=false>;
    }
} string_db <optimize=false>;
*/
    


local TFindResults fa = FindAll("DXBC");

local uint32 ByteSwap32( uint32 value) {
    local uint32 iLittleE = ((value & 0xFF) << 24)
                        | ((value & 0xFF00) << 8)
                        | ((value >> 8) & 0xFF00)
                        | (value >> 24);
    return iLittleE;
}

local uint16 ByteSwap16( uint16 value) {
    local uint16 wLittleE = ((value & 0xFF) << 8) | (value >> 8);
    return wLittleE;
}

FSeek(fa.start[0]);
struct {
    local uint shader_size = ReadUInt(FTell() + 0x18);
    ubyte shader_obj[shader_size];
} shader[fa.count] <optimize=false>;

//FSeek(4682742); //1.12
//FSeek(5849069); //reloaded

local uint64 shader_size_offset = ByteSwap32(shader[0].shader_size);
shader_size_offset = (shader_size_offset << 32);
shader_size_offset = shader_size_offset | ByteSwap32(shader[1].shader_size);
BigEndian();
FSeek(FindFirst(shader_size_offset));
LittleEndian();
struct {
    uint size;
} shader_size[fa.count];