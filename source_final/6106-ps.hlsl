// Glow Extract PS
// ---- Created with 3Dmigoto v1.3.16 on Tue Sep 19 18:57:00 2023
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


static const float3 LuminanceCoefficients = float3(0.2125f, 0.7154f, 0.0721f);
static const float3 BrightnessCoefficients = float3(0.333f,0.333f,0.333f);

void main(
  float4 v0 : SV_POSITION0,
  nointerpolation float4 v1 : TEXCOORD0,
  linear noperspective float4 v2 : TEXCOORD1,
  linear noperspective float2 v3 : TEXCOORD2,
  out float3 o0 : SV_TARGET0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  //float ins = IniParams.Load(int2(1, 0)).y;

  r0.xyz = t0.Sample(s0_s, v2.xy).xyz;

  //r0 = min(128, r0);



  //lum = min(lum, 6.0);

  float exposure = v1.x;
  float glow_power = 1;

  //if (ins != 1) {
	float exposure_scale = 0.5f;
	glow_power = 1.8f;
  //}

  //float exposedLuminances = lum;
  //float4 ins = IniParams.Load(int2(1, 0));


  //float luminanceWeights = min(1.f, 5 / exposedLuminances);

  //exposedLuminances = max(0, log2(exposedLuminances));

  float lum = dot(LuminanceCoefficients, r0.xyz * exposure);
  float remapLum = dot(LuminanceCoefficients, (max(0, log2(r0.xyz * exposure))));


  float3 bloom0 = r0.xyz * exposure * exposure_scale * remapLum / (lum + 0.0001f);
/*
//threshold for highlight in linear without exposure
  if (ins != 1) {
    exposure = min(6 * 0.18, v1.x);

    exposedLuminances = lum * exposure;
    bloom0 = r0.xyz * exposure * saturate( (exposedLuminances - 3) / exposedLuminances);
  }
*/
  //bloom0 = (max(log2( r0.xyz * exposure * pow(2, -1)), 0));
  o0 = pow(bloom0, glow_power);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Tue Sep 19 18:57:00 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   x           1     NONE   float   x
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps constant v1.x
dcl_input_ps linear noperspective v2.xyzw
dcl_input_ps linear noperspective v3.xy
dcl_output o0.xyz
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.zyzz, t0.xyzw, s0
add r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xwxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.zwzz, t0.xyzw, s0
add r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, v1.xxxx
mul r1.xy, |v3.xyxx|, |v3.xyxx|
mul r1.xy, r1.xyxx, r1.xyxx
mad r1.xy, -r1.xyxx, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul_sat r0.w, r1.y, r1.x
mul r0.xyz, r0.wwww, r0.xyzx
log r0.xyz, r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sqrt o0.xyz, r0.xyzx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
