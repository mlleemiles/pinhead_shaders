//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 27 12:36:47 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz
// SV_TARGET                1   x           1   TARGET   float   x
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear noperspective v1.xy
dcl_output o0.xyz
dcl_output o1.x
dcl_temps 10
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r1.xyz, -|r0.xyxx|, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.y, -|r0.y|, r1.x
lt r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.zw, r0.zzzw, -r1.yyyz, r1.yyyz
ge r1.x, l(0.000000), r2.y
movc r2.xz, r1.xxxx, r0.zzwz, r0.xxyx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, r2.xxyz
mad r1.xyz, r0.yzwy, l(5.000000, 5.000000, 5.000000, 0.000000), cb0[4].xyzx
mad r3.xyz, r1.xyzx, cb0[3].xyzx, cb0[2].xyzx
mad r2.xyz, r2.xyzx, r0.xxxx, r1.xyzx
mad r2.xyz, r2.xyzx, cb0[3].xyzx, cb0[2].xyzx
add r2.xyz, -r3.xyzx, r2.xyzx
dp2 r0.x, r2.xzxx, r2.xzxx
sqrt r0.x, r0.x
div r0.x, l(0.011049), r0.x
mul r4.xyz, r0.xxxx, r2.xyzx
mul r5.xyz, r4.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
mov r6.xyz, r3.xyzx
mov r1.w, l(0)
mov r2.w, l(0)
loop
  ige r3.w, r2.w, l(22)
  breakc_nz r3.w
  mad r7.xyz, r2.xyzx, r0.xxxx, r6.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r3.w, r7.xzxx, t3.yzwx, s4, l(0.000000)
  add r3.w, -r3.w, r7.y
  ge r4.w, l(-0.001953), r3.w
  if_nz r4.w
    mov r7.xyz, r6.xyzx
    mov r4.w, r3.w
    mov r5.w, l(0)
    loop
      ige r6.w, r5.w, l(5)
      breakc_nz r6.w
      mad r8.xyz, r4.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r7.xyzx
      sample_l_indexable(texture2d)(float,float,float,float) r6.w, r8.xzxx, t3.yzwx, s4, l(0.000000)
      add r6.w, -r6.w, r8.y
      ge r7.w, l(-0.001953), r6.w
      if_nz r7.w
        mov r7.xyz, r8.xyzx
        mov r4.w, r6.w
        break
      endif
      iadd r5.w, r5.w, l(1)
      mov r7.xyz, r8.xyzx
      mov r4.w, r6.w
    endloop
    mov r3.w, r4.w
  endif
  ge r5.w, l(-0.001953), r3.w
  if_nz r5.w
    mov r6.xyz, r7.xyzx
    mov r1.w, r3.w
    break
  endif
  iadd r2.w, r2.w, l(1)
  mov r6.xyz, r7.xyzx
  mov r1.w, r3.w
endloop
ge r0.x, l(-0.001953), r1.w
if_nz r0.x
  mov r2.xyz, r6.xyzx
  mov r3.xyz, r6.xyzx
  mov r0.x, l(-0.500000)
  mov r3.w, r1.w
  mov r4.x, l(0)
  loop
    ige r4.y, r4.x, l(4)
    breakc_nz r4.y
    mad r2.xyz, r5.xyzx, r0.xxxx, r2.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.y, r2.xzxx, t3.yxzw, s4, l(0.000000)
    add r2.w, r2.y, -r4.y
    mul r4.y, r0.x, l(0.500000)
    lt r4.z, l(-0.001953), r2.w
    movc r0.x, r4.z, |r4.y|, -|r4.y|
    lt r4.y, |r2.w|, |r3.w|
    movc r3.xyzw, r4.yyyy, r2.xyzw, r3.xyzw
    iadd r4.x, r4.x, l(1)
  endloop
  mad r2.xyz, r3.xyzx, cb0[8].xyxx, cb0[1].yzwy
  mad r3.xy, r2.xzxx, cb0[5].wwww, cb0[7].zwzz
  gather4_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.xyxx, t3.xyzw, s4.x
  mad r4.xyzw, r4.xyzw, cb0[9].yyyy, cb0[9].xxxx
  mul r3.xy, r3.xyxx, cb0[9].zzzz
  frc r3.xy, r3.xyxx
  lt r3.xy, l(0.500000, 0.500000, 0.000000, 0.000000), r3.xyxx
  movc r3.xy, r3.xyxx, l(0.750000,0.750000,0,0), l(0.250000,0.250000,0,0)
  add r4.xyzw, -r4.xwwz, r4.yxzy
  mov r5.x, cb0[3].w
  mov r5.yw, r4.zzzx
  mov r5.z, l(0)
  add r6.xyz, -r5.yzxy, r5.wzxw
  mad r3.yzw, r3.yyyy, r6.xxyz, r5.yyzx
  mov r4.xz, r5.zzxz
  add r5.xyz, -r4.zxyz, r4.zxwz
  mad r4.xyz, r3.xxxx, r5.xyzx, r4.zxyz
  mul r5.xyz, r3.yzwy, r4.xyzx
  mad r3.xyz, r4.zxyz, r3.zwyz, -r5.xyzx
  dp3 r0.x, r3.xyzx, r3.xyzx
  rsq r0.x, r0.x
  mul r4.xyz, r0.xxxx, r3.xyzx
  add r1.w, r2.z, r2.x
  mul r5.x, r1.w, l(0.030000)
  mul r5.yzw, r2.yyxz, l(0.000000, 0.100000, 0.015000, 0.015000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t5.xyzw, s0, l(0.000000)
  
  //mul r6.xyz, r6.xyz, l(0.5)
  
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t6.xyzw, s0, l(0.000000)
  
  //mul r5.xyz, r5.xyz, l(0.5)
  
  add r5.xyz, -r6.xyzx, r5.xyzx
  mad r5.xyz, r4.yyyy, r5.xyzx, r6.xyzx
  dp3_sat r1.w, cb0[6].xyzx, r4.xyzx
  mad r3.xyz, r3.xyzx, r0.xxxx, cb0[6].xyzx
  mad r3.xyz, r3.xyzx, l(1.41421354, 1.41421354, 1.41421354, 0.000000), r2.xyzx
  mad r3.xz, r3.xxzx, cb0[5].wwww, cb0[7].zzwz
  mad r4.xy, r3.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  max r0.x, |r4.y|, |r4.x|
  ge r0.x, l(1.000000), r0.x
  if_nz r0.x
    lt r0.x, l(0.000000), cb0[4].w
    if_nz r0.x
      if_z cb0[10].x
        sample_l_indexable(texture2d)(float,float,float,float) r4.x, r3.xzxx, t2.xyzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.y, r3.xzxx, t0.yxzw, s1, l(0.000000)
      else
        sample_l_indexable(texture2d)(float,float,float,float) r4.y, r3.xzxx, t2.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.x, r3.xzxx, t0.xyzw, s1, l(0.000000)
      endif
      add r0.x, -r4.x, r4.y
      mad r0.x, cb0[4].w, r0.x, r4.x
    else
      if_z cb0[10].x
        sample_l_indexable(texture2d)(float,float,float,float) r0.x, r3.xzxx, t2.xyzw, s1, l(0.000000)
      else
        sample_l_indexable(texture2d)(float,float,float,float) r0.x, r3.xzxx, t0.xyzw, s1, l(0.000000)
      endif
    endif
    mad r0.x, r0.x, cb0[9].y, cb0[9].x
    add r0.x, -r0.x, r3.y
    mul_sat r0.x, r0.x, l(0.500000)
  else
    mov r0.x, l(1.000000)
  endif
  mul r3.xyz, r1.wwww, r5.xyzx
  mul r3.xyz, r0.xxxx, r3.xyzx
  dp3 r0.x, l(1.000000, 1.000000, 1.000000, 0.000000), |r0.yzwy|
  div r4.xyz, r0.yzwy, r0.xxxx
  add r0.xw, -|r4.zzzx|, l(1.000000, 0.000000, 0.000000, 1.000000)
  lt r6.xy, r4.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r0.xw, r6.xxxy, -r0.xxxw, r0.xxxw
  ge r1.w, l(0.000000), r4.y
  movc r0.xw, r1.wwww, r0.xxxw, r4.xxxz
  mad r4.xy, |r0.wxww|, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r4.xy, -|r4.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul_sat r4.xy, |r4.xyxx|, cb0[8].wzww
  add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  lt r6.xyzw, r0.xwxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r6.xyzw, r6.xyzw, cb0[0].xyzw, cb0[0].zwxy
  mad r7.xyzw, |r0.xwxw|, l(1.17806256, 1.17806256, -1.17806256, -1.17806256), l(0.000000, 0.000000, 1.17806256, 1.17806256)
  mul r6.xyzw, r6.xyzw, r7.xyzw
  lt r4.zw, l(0.000000, 0.000000, 0.500000, 0.500000), |r0.wwwx|
  movc r4.zw, r4.zzzw, r6.zzzw, r6.xxxy
  mad r0.xw, r4.zzzw, r4.xxxy, r0.xxxw
  mad r0.xw, r0.xxxw, l(0.250000, 0.000000, 0.000000, 0.250000), l(0.500000, 0.000000, 0.000000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xwxx, t1.xyzw, s2, l(0.000000)
  
  mul r4.xyz, r4.xyz, l(0.25)
  
  dp3 r9.x, r4.xyz, l(0.2125, 0.7154, 0.0721)
  dp3 r9.y, cb0[5].xyz, l(0.2125, 0.7154, 0.0721)
  
  div r9.y, r9.x, r9.y
  mul r9.xyz, cb0[5].xyz, r9.xxxx
  
  mul r5.xyz, r5.xyzx, r4.xyzx
  mad r3.xyz, r3.xyzx, r9.xyz, r5.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.yzyy, t4.xyzw, s3, l(0.000000)
  mul r0.xyz, r0.xyzx, cb0[9].wwww
  add r1.xyz, r1.xyzx, -r2.xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  sqrt r0.w, r0.w
  max r1.x, r2.y, l(0.001000)
  mul r1.x, r1.x, cb0[1].x
  mul r1.y, r1.x, l(-1.442695)
  exp r1.y, r1.y
  add r1.y, -r1.y, l(1.000000)
  mul r0.w, r0.w, r1.y
  div r0.w, r0.w, r1.x
  mad r0.w, r0.w, cb0[7].x, cb0[7].y
  div r0.w, cb0[7].y, r0.w
  add_sat r0.w, -r0.w, l(1.000000)
  mad r0.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
  add r0.xyz, -r3.xyzx, r0.xyzx
  mad r0.xyz, r0.wwww, r0.xyzx, r3.xyzx
  mov o1.x, l(1.000000)
else
  mov r0.xyz, l(0,0,0,0)
  mov o1.x, l(0)
endif
and r1.xyz, r0.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
ieq r1.xyz, r1.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
or r0.w, r1.y, r1.x
or r0.w, r1.z, r0.w
movc o0.xyz, r0.wwww, l(0,0,0,0), r0.xyzx
ret
// Approximately 0 instruction slots used
