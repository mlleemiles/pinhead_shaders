// Glow Extract VS
// ---- Created with 3Dmigoto v1.3.16 on Tue Sep 19 18:59:57 2023
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[3];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[15];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  uint v1 : SV_VERTEXID0,
  uint v2 : SV_INSTANCEID0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float2 o3 : TEXCOORD2)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.z = dot(v0.xyzw, cb3[2].xyzw);
  o0.w = 1;
  r0.x = dot(v0.xyzw, cb3[0].xyzw);
  r0.y = dot(v0.xyzw, cb3[1].xyzw);
  o0.xy = r0.xy;
  o3.xy = r0.xy;
  r0.x = t0.SampleLevel(s0_s, float2(0,0), 0).x;
  o1.x = r0.x;
  r0.xyzw = cmp(float4(0,0,0,0) < v0.xyxy);
  r0.xyzw = r0.xyzw ? float4(2,0,2,0) : float4(0,2,0,2);
  o2.xyzw = r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Tue Sep 19 18:59:57 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// SV_VERTEXID              0   x           1   VERTID    uint
// SV_INSTANCEID            0   x           2   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o2.xyzw
dcl_output o3.xy
dcl_temps 1
dp4 o0.z, v0.xyzw, cb3[2].xyzw
mov o0.w, l(1.000000)
dp4 r0.x, v0.xyzw, cb3[0].xyzw
dp4 r0.y, v0.xyzw, cb3[1].xyzw
mov o0.xy, r0.xyxx
mov o3.xy, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), t0.xyzw, s0, l(0.000000)
mul o1.x, r0.x, l(0.250000)
lt r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), v0.xyxy
movc r0.xyzw, r0.xyzw, l(2.000000,0,2.000000,0), l(0,2.000000,0,2.000000)
mad o2.xyzw, cb2[14].xyxy, l(-0.250000, -0.250000, 0.250000, 0.250000), r0.xyzw
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
